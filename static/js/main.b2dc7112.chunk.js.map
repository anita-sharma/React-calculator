{"version":3,"sources":["serviceWorker.js","index.js","App.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","props","isoperator","state","ans","length","addnumeric","d","setState","addsign","s","calculate","eval","clear","dlt","i","className","this","onClick","style","display","marginLeft","Component"],"mappings":"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","file":"static/js/main.b2dc7112.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React,{Component} from 'react';\nimport \"./App.css\";\n\nclass App extends Component\n{\n  constructor(props)\n  {\n    super(props);\n    this.state={\n      ans:\"\",\n    };\n    \n  }\n  isoperator=()=>{\n    if((this.state.ans[this.state.ans.length-1]=='+') || (this.state.ans[this.state.ans.length-1]=='-') \n      || (this.state.ans[this.state.ans.length-1]=='*') ||(this.state.ans[this.state.ans.length-1]=='/'))\n    {\n      return(true);\n    }\n    return(false);\n  }\n\n  addnumeric=(d)=>{\n    const ans=this.state.ans+d;\n    this.setState({\n      ans:ans\n    });\n  }\naddsign=(s)=>{\n  if(this.state.ans===\"\")\n  {\n    if(s===\"+\" || s===\"-\")\n    {\n      const ans=this.state.ans+s;\n      this.setState({\n        ans:ans\n      });\n      return;\n    }\n    else\n    {\n      this.setState({\n        ans:\"\"\n      });\n      return;\n    }\n  }\n  if(!this.isoperator() && this.state.ans!=\"\" )\n  {\n    const ans=this.state.ans+s;\n    this.setState({\n      ans:ans\n    });\n  }\n\n\n}\ncalculate=()=>{\n  if(this.state.ans===\"\")\n  {\n    this.setState({\n      ans:\"\"\n    });\n    return;\n  }\n  if(!this.isoperator())\n  {\n    const ans=eval(this.state.ans);\n    this.setState({\n      ans:ans\n    });\n  }\n}\n\nclear=()=>{\n  this.setState({\n    ans:\"\"\n  });\n}\ndlt=()=>{\n  var ans=\"\";\n  for(var i=0;i<this.state.ans.length-1;i++)\n  {\n    ans=ans+this.state.ans[i];\n  }\n  this.setState({\n    ans:ans\n  });\n}\n  render()\n  {\n   return(\n      <>\n      <center>\n        <div className=\"maindiv\">\n          <h1>Calculator</h1>\n          <div className=\"calcdiv\">\n            <h2 className=\"ans\">{this.state.ans}</h2>\n          </div>\n          <div>\n\n            <button className=\"equal\" onClick={this.clear} style={{display:\"inline-block\"}}>Clr</button>\n            <button className=\"sign\" onClick={()=>this.addsign(\"+\")} style={{display:\"inline-block\",marginLeft:\"20px\"}}>+</button>\n            <button className=\"sign\" onClick={()=>this.addsign(\"-\")} style={{display:\"inline-block\",marginLeft:\"20px\"}}>-</button>\n           <button className=\"equal\" onClick={this.dlt} style={{display:\"inline-block\",marginLeft:\"20px\"}}>Dlt</button>\n            <div></div>\n\n            <button className=\"numeric\" onClick={()=>this.addnumeric(\"1\")} style={{display:\"inline-block\"}}>1</button>\n            <button className=\"numeric\" onClick={()=>this.addnumeric(\"2\")} style={{display:\"inline-block\",marginLeft:\"20px\"}}>2</button>\n            <button className=\"numeric\" onClick={()=>this.addnumeric(\"3\")} style={{display:\"inline-block\",marginLeft:\"20px\"}}>3</button>\n            <button className=\"sign\" onClick={()=>this.addsign(\"*\")} style={{display:\"inline-block\",marginLeft:\"20px\"}}>*</button>\n            <div></div>\n\n            <button className=\"numeric\" onClick={()=>this.addnumeric(\"4\")} style={{display:\"inline-block\"}}>4</button>\n            <button className=\"numeric\" onClick={()=>this.addnumeric(\"5\")} style={{display:\"inline-block\",marginLeft:\"20px\"}}>5</button>\n            <button className=\"numeric\" onClick={()=>this.addnumeric(\"6\")} style={{display:\"inline-block\",marginLeft:\"20px\"}}>6</button>\n            <button className=\"sign\" onClick={()=>this.addsign(\"/\")} style={{display:\"inline-block\",marginLeft:\"20px\"}}>/</button>\n            <div></div>\n\n            <button className=\"numeric\" onClick={()=>this.addnumeric(\"7\")} style={{display:\"inline-block\"}}>7</button>\n            <button className=\"numeric\" onClick={()=>this.addnumeric(\"8\")} style={{display:\"inline-block\",marginLeft:\"20px\"}}>8</button>\n            <button className=\"numeric\" onClick={()=>this.addnumeric(\"9\")} style={{display:\"inline-block\",marginLeft:\"20px\"}}>9</button>\n            <button className=\"numeric\" onClick={()=>this.addnumeric(\"0\")} style={{display:\"inline-block\",marginLeft:\"20px\"}}>0</button>\n            <div></div>\n            <button className=\"equal\" onClick={this.calculate} style={{display:\"inline-block\",marginLeft:\"20px\"}}>=</button>\n\n            \n          </div>\n        </div>\n        </center>\n      </>\n      )\n  }\n}\n\nexport default App;"],"sourceRoot":""}